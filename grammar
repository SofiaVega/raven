OPCIONES: "opciones"
%import common.ESCAPED_STRING   -> STRING
%import common.WS
%ignore WS

IF: "si"
ELSE: "sino"
HUV: "habiaUnaVez"
PRINT: "->"
SALTO: /\n+/

NUMTIPO: "num"
ENUNCIADO: "enunciado"
BOOL: "bool"
ARREGLO: "arreglo"
CAPITULO: "capitulo"
MECANICA: "mecanica"
TITULO: "titulo"
REGRESA: "regresa"
VACIO: "vacia"

MULT: /\*/
SUMA: /\+/
DIV: /\//
RESTA: /\-/

COMENTARIO: "//" /[^\n]*/ SALTO
%ignore COMENTARIO


ICOR: "{"
FCOR: "}"
IPAR: "("
FPAR: ")"
NOT_EQUAL: "<>"
IGUAL: "="
IMPORTAR: "importar"
COMO: "como"

ID: /[a-zA-Z_][a-zA-Z_0-9]*/
NUM: /\d+/

start: programa
programa: HUV ID np_hola SALTO importarloop TITULO IGUAL STRING SALTO varsloop mecanicaloop capituloloop
np_hola:
importarloop: importar | importarloop importar|
varsloop: vars | varsloop vars |
mecanicaloop: mecanica | mecanicaloop  mecanica |
capituloloop: capitulo | capituloloop capitulo 


opciones: OPCIONES ":" "[" opciones2 "]"
opciones2: opcion opciones3
opciones3: ";" opcion opciones3 | 
opcion: STRING "," ID IPAR estatuto2 FPAR

vars: tipo vars3 vars2 SALTO
vars2: "," vars3 vars2 |
vars3: ID | ID "=" expresion

importar: IMPORTAR STRING COMO ID

mecanica: MECANICA tipo ID IPAR mecanica2 FPAR ICOR SALTO estatuto SALTO mecanica4 mecanica5 FCOR np_hola
mecanica2: tipo ID mecanica3 |
mecanica3: "," tipo ID mecanica3 | 
mecanica4: estatuto SALTO mecanica4 |
mecanica5: REGRESA varcte | 

capitulo: CAPITULO ID IPAR mecanica2 FPAR ICOR SALTO TITULO IGUAL STRING SALTO estatuto SALTO mecanica4 FCOR

expresion: exp | exp g
g: exp | "<" exp | ">" exp | NOT_EQUAL exp

exp: termino  | termino e
cuadruplo:
e: SUMA exp cuadruplo | RESTA exp cuadruplo

termino: factor | factor f
f: MULT termino cuadruplo2
        | DIV termino cuadruplo2
cuadruplo2: 
        

factor: IPAR expresion FPAR | varcte | SUMA varcte | RESTA varcte
varcte:  ID ->idd
        | NUM -> entero
        | STRING -> stringg
np_asignacion1:
np_asignacion2:

estatuto: asignacion | condicion | escritura | ID IPAR estatuto2 FPAR | opciones
estatuto2: ID estatuto3 |
estatuto3: "," ID estatuto3 |

condicion: IF IPAR expresion FPAR ICOR estatuto condicion2 FCOR sino
sino: ELSE ICOR estatuto condicion2 FCOR | 
condicion2: estatuto condicion2 |

asignacion: np_asignacion1 ID "=" expresion

escritura: PRINT STRING | PRINT ID "[" NUM "]" SALTO

arreglo: ARREGLO tipo ID "=" "[" arreglo2 "]"
arreglo2: val arreglo3 |
arreglo3: "," val arreglo3 |
val: ID | NUM | NUM | STRING

tipo: NUMTIPO | ENUNCIADO | BOOL | ARREGLO | VACIO
