OPCIONES: "opciones"
%import common.ESCAPED_STRING   -> STRING
%import common.WS
%ignore WS

IF: "si"
ELSE: "sino"
HUV: "habiaUnaVez"
PRINT: "->"
SALTO: /\n+/

NUMTIPO: "num"
ENUNCIADO: "enunciado"
BOOL: "bool"
ARREGLO: "arreglo"
CAPITULO: "capitulo"
MECANICA: "mecanica"
TITULO: "titulo"
REGRESA: "regresa"
VACIO: "vacia"
WHILE: "mientras"
POR: "por"
EN: "en"

MULT: /\*/
SUMA: /\+/
DIV: /\//
RESTA: /\-/

COMENTARIO: "//" /[^\n]*/ SALTO
%ignore COMENTARIO


ICOR: "{"
FCOR: "}"
IPAR: /\(/
FPAR: ")"
NOT_EQUAL: "<>"
GREATER_THEN: ">"
LESSER_THEN: "<"
IGUAL_A: "=="
IGUAL: "="
IMPORTAR: "importar"
COMO: "como"

ID: /[a-zA-Z_][a-zA-Z_0-9]*/
NUM: /\d+/

start: programa
programa: HUV ID np_hola SALTO importarloop TITULO IGUAL STRING SALTO varsloop mecanicaloop capituloloop
np_hola:
importarloop: importar | importarloop importar|
varsloop: vars | varsloop vars |
mecanicaloop: mecanica | mecanicaloop  mecanica |
capituloloop: capitulo | capituloloop capitulo 


opciones: OPCIONES ":" "[" opciones2 "]"
opciones2: opcion opciones3
opciones3: ";" opcion opciones3 | 
opcion: STRING "," ID IPAR estatuto2 FPAR

vars: tipo vars3 np_add_vars vars2 SALTO
np_add_vars:
vars2: "," vars3 vars2 |
vars3: ID | ID "=" expresion 
np_addvars: 


importar: IMPORTAR STRING COMO ID

mecanica: MECANICA tipo ID IPAR mecanica2 FPAR ICOR SALTO estatuto SALTO mecanica4 mecanica5 FCOR np_hola
mecanica2: tipo ID mecanica3 |
mecanica3: "," tipo ID mecanica3 | 
mecanica4: estatuto SALTO mecanica4 |
mecanica5: REGRESA varcte | 

capitulo: CAPITULO ID IPAR mecanica2 FPAR ICOR SALTO TITULO IGUAL STRING SALTO estatuto SALTO mecanica4 FCOR

expresion: exp | exp expresion_mayor
expresion_mayor: exp | LESSER_THEN exp cuadruplo_expresion | GREATER_THEN exp cuadruplo_expresion | NOT_EQUAL exp cuadruplo_expresion | IGUAL_A exp cuadruplo_expresion
cuadruplo_expresion: 


exp: termino  | termino exp_suma
exp_suma: SUMA exp cuadruplo_suma | RESTA exp cuadruplo_suma
cuadruplo_suma:

termino: factor | factor termino_mult
termino_mult: MULT termino cuadruplo_mult_div
        | DIV termino cuadruplo_mult_div
cuadruplo_mult_div: 
        

factor: IPAR expresion FPAR | varcte | SUMA varcte | RESTA varcte
varcte:  ID -> guardar_id
        | NUM -> guardar_num
        | STRING -> guardar_string
        | BOOL -> guardar_bool
np_asignacion1:
np_asignacion2:

estatuto: asignacion | condicion | escritura | ID IPAR estatuto2 FPAR | opciones
estatuto2: ID estatuto3 |
estatuto3: "," ID estatuto3 |

condicion: IF IPAR expresion FPAR np_if ICOR estatuto condicion2 FCOR sino np_if_2
np_if: 
np_if_2:
sino: ELSE np_if_3 ICOR estatuto condicion2 FCOR | 
condicion2: estatuto condicion2 |
np_if_3: 

asignacion: np_asignacion1 ID "=" expresion

escritura: PRINT STRING -> print_string
        | PRINT expresion np_print_expresion -> print_expresion
        | PRINT ID "[" NUM "]" SALTO -> print_import
np_print_expresion: 

arreglo: ARREGLO tipo ID "=" "[" arreglo2 "]"
arreglo2: val arreglo3 |
arreglo3: "," val arreglo3 |
val: ID | NUM | NUM | STRING

tipo: NUMTIPO | ENUNCIADO | BOOL | ARREGLO | VACIO

ciclo_por: POR ID EN ID ICOR estatuto ciclo_por2 FCOR
ciclo_por2: estatuto ciclo_por2 | 

ciclo_while: WHILE IPAR expresion FPAR ICOR estatuto ciclo_while2 FCOR
ciclo_while2: estatuto ciclo_while2 | 
